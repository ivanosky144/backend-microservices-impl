syntax = "proto3";

package messaging;

option go_package = "github.com/ivanosky144/temuka-microservice-oriented-backend-services/services/messaging-service/pb";

service MessagingService {
    rpc CreateConversation (CreateConversationRequest) returns (CreateConversationResponse);
    rpc JoinConversation (JoinConversationRequest) returns (JoinConversationResponse);
    rpc GetConversations (GetConversationsRequest) returns (GetConversationsResponse);
    rpc SendMessage (SendMessageRequest) returns (SendMessageResponse);
    rpc StreamMessages (stream StreamMessagesRequest) returns (stream StreamMessagesResponse);
    rpc Connect (ConnectRequest) returns (ConnectResponse);
}

message CreateConversationRequest {
    string title = 1;
    int32 creator_id = 2;
}

message CreateConversationResponse {
    string message = 1;
    Conversation data = 2;
}

message JoinConversationRequest {
    int32 id = 1;
    int32 userId = 2;
}

message JoinConversationResponse {
    string message = 1;
}

message GetConversationsRequest {
    int32 participant_id = 1;
}

message GetConversationsResponse {
    string message = 1;
    repeated Conversation data = 2;
}

message Conversation {
    int32 id = 1;
    string title = 2;
    int32 user_id = 3;
}

message Participant {
    int32 id = 1;
    int32 conversation_id = 2;
    int32 user_id = 3;
}

message SendMessageRequest {
    int32 participant_id = 1;
    string text = 2;
}

message SendMessageResponse {
    string message = 1;
}

message StreamMessagesRequest {
    int32 participant_id = 1;
}

message StreamMessagesResponse {
    repeated Message messages = 1;
}

message Message {
    int32 participant_id = 1;
    string text = 2;
}

message ConnectRequest {
    int32 participant_id = 1;
}

message ConnectResponse {
    string message = 1;
}